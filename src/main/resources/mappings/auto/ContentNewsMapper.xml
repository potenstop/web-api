<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.potens.web.dao.db.auto.ContentNewsMapper">
  <resultMap id="BaseResultMap" type="top.potens.web.model.ContentNews">
    <result column="content_news_id" jdbcType="INTEGER" property="contentNewsId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content_id" jdbcType="INTEGER" property="contentId" />
    <result column="article_source" jdbcType="VARCHAR" property="articleSource" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="content_zone_id" jdbcType="TINYINT" property="contentZoneId" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="top.potens.web.model.ContentNews">
    <result column="article" jdbcType="LONGVARCHAR" property="article" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    content_news_id, create_time, update_time, content_id, article_source, title, editor, 
    publish_time, content_zone_id, token
  </sql>
  <sql id="Blob_Column_List">
    article
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="top.potens.web.model.ContentNewsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `content_news`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="top.potens.web.model.ContentNewsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `content_news`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="top.potens.web.model.ContentNewsExample">
    delete from `content_news`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.potens.web.model.ContentNews">
    <selectKey keyProperty="contentNewsId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `content_news` (create_time, update_time, content_id, 
      article_source, title, editor, 
      publish_time, content_zone_id, token, 
      article)
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{contentId,jdbcType=INTEGER}, 
      #{articleSource,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{contentZoneId,jdbcType=TINYINT}, #{token,jdbcType=VARCHAR}, 
      #{article,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.potens.web.model.ContentNews">
    <selectKey keyProperty="contentNewsId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `content_news`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="contentId != null">
        content_id,
      </if>
      <if test="articleSource != null">
        article_source,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="editor != null">
        editor,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="contentZoneId != null">
        content_zone_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="article != null">
        article,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="articleSource != null">
        #{articleSource,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contentZoneId != null">
        #{contentZoneId,jdbcType=TINYINT},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="article != null">
        #{article,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.potens.web.model.ContentNewsExample" resultType="java.lang.Long">
    select count(*) from `content_news`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `content_news`
    <set>
      <if test="record.contentNewsId != null">
        content_news_id = #{record.contentNewsId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contentId != null">
        content_id = #{record.contentId,jdbcType=INTEGER},
      </if>
      <if test="record.articleSource != null">
        article_source = #{record.articleSource,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.editor != null">
        editor = #{record.editor,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contentZoneId != null">
        content_zone_id = #{record.contentZoneId,jdbcType=TINYINT},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.article != null">
        article = #{record.article,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update `content_news`
    set content_news_id = #{record.contentNewsId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      content_id = #{record.contentId,jdbcType=INTEGER},
      article_source = #{record.articleSource,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      editor = #{record.editor,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      content_zone_id = #{record.contentZoneId,jdbcType=TINYINT},
      token = #{record.token,jdbcType=VARCHAR},
      article = #{record.article,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `content_news`
    set content_news_id = #{record.contentNewsId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      content_id = #{record.contentId,jdbcType=INTEGER},
      article_source = #{record.articleSource,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      editor = #{record.editor,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      content_zone_id = #{record.contentZoneId,jdbcType=TINYINT},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>