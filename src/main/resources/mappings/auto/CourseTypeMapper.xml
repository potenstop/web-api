<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.potens.web.dao.db.auto.CourseTypeMapper">
  <resultMap id="BaseResultMap" type="top.potens.web.model.CourseType">
    <id column="course_type_id" jdbcType="INTEGER" property="courseTypeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="rank" jdbcType="TINYINT" property="rank" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="sequence" jdbcType="TINYINT" property="sequence" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_type_id, create_time, update_time, type_name, `rank`, parent_id, `sequence`, 
    type_code
  </sql>
  <select id="selectByExample" parameterType="top.potens.web.model.CourseTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `course_type`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `course_type`
    where course_type_id = #{courseTypeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `course_type`
    where course_type_id = #{courseTypeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.potens.web.model.CourseTypeExample">
    delete from `course_type`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.potens.web.model.CourseType">
    <selectKey keyProperty="courseTypeId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `course_type` (create_time, update_time, type_name, 
      `rank`, parent_id, `sequence`, 
      type_code)
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{typeName,jdbcType=VARCHAR}, 
      #{rank,jdbcType=TINYINT}, #{parentId,jdbcType=INTEGER}, #{sequence,jdbcType=TINYINT}, 
      #{typeCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.potens.web.model.CourseType">
    <selectKey keyProperty="courseTypeId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `course_type`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="rank != null">
        `rank`,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sequence != null">
        `sequence`,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=TINYINT},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.potens.web.model.CourseTypeExample" resultType="java.lang.Long">
    select count(*) from `course_type`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `course_type`
    <set>
      <if test="record.courseTypeId != null">
        course_type_id = #{record.courseTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        `rank` = #{record.rank,jdbcType=TINYINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.sequence != null">
        `sequence` = #{record.sequence,jdbcType=TINYINT},
      </if>
      <if test="record.typeCode != null">
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `course_type`
    set course_type_id = #{record.courseTypeId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      `rank` = #{record.rank,jdbcType=TINYINT},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      `sequence` = #{record.sequence,jdbcType=TINYINT},
      type_code = #{record.typeCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.potens.web.model.CourseType">
    update `course_type`
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        `rank` = #{rank,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sequence != null">
        `sequence` = #{sequence,jdbcType=TINYINT},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
    </set>
    where course_type_id = #{courseTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.potens.web.model.CourseType">
    update `course_type`
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      type_name = #{typeName,jdbcType=VARCHAR},
      `rank` = #{rank,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=INTEGER},
      `sequence` = #{sequence,jdbcType=TINYINT},
      type_code = #{typeCode,jdbcType=VARCHAR}
    where course_type_id = #{courseTypeId,jdbcType=INTEGER}
  </update>
</mapper>