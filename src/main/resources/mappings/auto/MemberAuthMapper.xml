<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.potens.web.dao.db.tool.auto.MemberAuthMapper">
  <resultMap id="BaseResultMap" type="top.potens.web.model.MemberAuth">
    <result column="member_auth_id" jdbcType="INTEGER" property="memberAuthId" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="identity_type" jdbcType="TINYINT" property="identityType" />
    <result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="credential" jdbcType="VARCHAR" property="credential" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    member_auth_id, member_id, identity_type, identifier, credential
  </sql>
  <select id="selectByExample" parameterType="top.potens.web.model.MemberAuthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `member_auth`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="top.potens.web.model.MemberAuthExample">
    delete from `member_auth`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.potens.web.model.MemberAuth">
    <selectKey keyProperty="memberAuthId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `member_auth` (member_id, identity_type, identifier, 
      credential)
    values (#{memberId,jdbcType=INTEGER}, #{identityType,jdbcType=TINYINT}, #{identifier,jdbcType=VARCHAR}, 
      #{credential,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.potens.web.model.MemberAuth">
    <selectKey keyProperty="memberAuthId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `member_auth`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="identityType != null">
        identity_type,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="credential != null">
        credential,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="identityType != null">
        #{identityType,jdbcType=TINYINT},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="credential != null">
        #{credential,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.potens.web.model.MemberAuthExample" resultType="java.lang.Long">
    select count(*) from `member_auth`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `member_auth`
    <set>
      <if test="record.memberAuthId != null">
        member_auth_id = #{record.memberAuthId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.identityType != null">
        identity_type = #{record.identityType,jdbcType=TINYINT},
      </if>
      <if test="record.identifier != null">
        identifier = #{record.identifier,jdbcType=VARCHAR},
      </if>
      <if test="record.credential != null">
        credential = #{record.credential,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `member_auth`
    set member_auth_id = #{record.memberAuthId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      identity_type = #{record.identityType,jdbcType=TINYINT},
      identifier = #{record.identifier,jdbcType=VARCHAR},
      credential = #{record.credential,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>